/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "groovy"
    id "java"
    id "idea"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group 'commitmentissues'
version '0.1'

task wrapper(type: Wrapper) {
    gradleVersion = "3.0";
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.yaml:snakeyaml:1.30'
    // classpath group : org.yaml', name: 'snakeyaml', version: '1.30'
}

application {
    // Define the main class for the application.
    mainClass = 'commitmentissues.App'
}

configurations {
    extraLibs
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

shadowJar {
   archiveBaseName.set('shadow')
   archiveClassifier.set('')
   archiveVersion.set('')
}

jar {
    manifest {
        attributes(
            "Implementation-Title": "Gradle",
            "Implementation-Version": archiveVersion,
            "Main-Class": "commitmentissues.App"
        )
    }

    from {
        configurations.runtimeClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
